#include<iostream>

using namespace std;
#include<vector>

bool gcd(int a, int b) {
    if(b == 0)
        return a > 1;
    return gcd(b, a%b);

}
int main() {
    int t;
    cin>>t;
    while(t--) {
        int m, x;
        cin>>m>>x;
        int count = 1;
        int start = 0;
        for(int i=1; i<=x; i++) {
            if(m == 1) {
                cout<<i<<" ";
            }
            else if(m == 2) {
                cout<<1<<" ";
            }
            else {
                if(i == 1) {
                    cout<<"1 ";
                    continue;
                }
                if(i >= m) {
                    cout<<start+1<<" ";
                }
                else {
                    int index = start + 
                }
            }
        }

        cout<<"\n";


    }
}

// m = 2
// 1                1


// m = 3
// 1                1
// 1 2              2   1


// m = 4
// 1                1
// 1 2              1   1
// 1 2 3            2   0


// m = 5
// 1                1
// 1 2              2   0
// 1 2 3            3   1
// 1 2 3 4          4   0 


// m = 6
// 1                1
// 1 2              1   1
// 1 2 3            1   2
// 1 2 3 4          1   1
// 1 2 3 4 5        2   0 2 4 

// m = 7
// 1                1
// 1 2              2   0
// 1 2 3            3   0
// 1 2 3 4          4   2
// 1 2 3 4 5        5   1
// 1 2 3 4 5 6      6   0

// m = 8
// 1,               1
// 1 2,             1   1
// 1 2 3,           1   1
// 1 2 3 4          1   3
// 1 2 3 4 5        1   2
// 1 2 3 4 5 6      1   1
// 1 2 3 4 5 6 7    2   0

// m = 9
// 1                    1   0
// 1 2                  2   0
// 1 2 3                2   2
// 1 2 3 4              3   0
// 1 2 3 4 5            3   3
// 1 2 3 4 5 6          4   2
// 1 2 3 4 5 6 7        5   1
// 1 2 3 4 5 6 7 8      6   0

// m = 15
// 1                                    1   0
// 1 2                                  2   0
// 1 2 3                                2   2
// 1 2 3 4                              2   2
// 1 2 3 4 5                            2   4
// 1 2 3 4 5 6                          2   2
// 1 2 3 4 5 6 7                        3   0
// 1 2 3 4 5 6 7 8                      3   6
// 1 2 3 4 5 6 7 8 9
// 1 2 3 4 5 6 7 8 9 10
// 1 2 3 4 5 6 7 8 9 10 11
// 1 2 3 4 5 6 7 8 9 10 11 12
// 1 2 3 4 5 6 7 8 9 10 11 12 13
// 1 2 3 4 5 6 7 8 9 10 11 12 13 14





